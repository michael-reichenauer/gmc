name: Build and release

on:
  push:
    branches: [master, develop, branches/cidi]
  pull_request:
    branches: [master, develop, branches/cidi]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_test_release_job:
    runs-on: ubuntu-latest
    name: Build, Test and Release Job

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.19.2"

      - name: Build & Test
        id: build
        run: |
          echo Building ...
          ./build
          echo "::set-output name=version::$(./gmc_linux -version -version)"
          echo Version: $(./gmc_linux -version)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.build.outputs.version }}
          release_name: Version ${{ steps.build.outputs.version }}
          draft: false
          prerelease: true
          body: ${{ github.event.head_commit.message }}

      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gmc_linux
          asset_name: gmc_linux
          asset_content_type: application/octet-stream

      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gmc.exe
          asset_name: gmc.exe
          asset_content_type: application/octet-stream
